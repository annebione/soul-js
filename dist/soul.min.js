"use strict";Object.defineProperty(exports,"__esModule",{value:!0});function Rank(a){const c=arguments;try{if(!Array.isArray(a))throw new TypeError("Soul.Rank: "+typeof a+" is not an Array");else if(c[1])for(var b=0;b<=a.length+5;b++){if("number"==typeof a[b][c[1]])return a.sort(function(d,a){return d[c[1]]<a[c[1]]});if("string"==typeof a[b][c[1]])return a.sort(function(d,a){return d[c[1]]<a[c[1]]?-1:d[c[1]]>a[c[1]]?1:0})}else return a.sort()}catch(a){console.error(a)}}function ReverseRank(a){const c=arguments;try{if(!Array.isArray(a))throw new TypeError("Soul.Rank: "+typeof a+" is not an Array");else if(c[1])for(var b=0;b<=a.length+5;b++){if("number"==typeof a[b][c[1]])return a.sort(function(d,a){return d[c[1]]<a[c[1]]}).reverse();if("string"==typeof a[b][c[1]])return a.sort(function(d,a){return d[c[1]]<a[c[1]]?-1:d[c[1]]>a[c[1]]?1:0}).reverse()}else return a.sort().reverse()}catch(a){console.error(a)}}function SetRanking(a,c,b){try{let e=[[],[]];const f=2;if(Array.isArray(a)&&"string"==typeof c&&Number.isInteger(b)){let g=b*f>=a.length?b:a.length/f;for(var d=0;d<a.length;d++)a.sort(function(d,a){return d[c]<a[c]});return e[0].push(a.slice(0,g)),e[1].push(a.slice(-g,g)),e}throw new TypeError}catch(a){console.error(a)}}function Rank$1(a){try{if(Array.isArray(a));else throw new TypeError("Soul.Rank: "+typeof a+" is not an Array")}catch(a){console.error(a)}}var Soul={Rank:Rank,ReverseRank:ReverseRank,SetRanking:SetRanking,Render:Rank$1};exports.Soul=Soul;
//# sourceMappingURL=soul.min.js.map
