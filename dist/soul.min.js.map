{"version":3,"file":"soul.min.js","sources":["../src/lib/Rank.js","../src/lib/ReverseRank.js","../src/index.js"],"sourcesContent":["\r\n\r\n\r\nexport default function Rank(array) {\r\n    try {\r\n        if (Array.isArray(array)) {\r\n            if (arguments[1]) {\r\n                for (var i = 0; i < array.length; i ++) {\r\n                    if (typeof array[i][arguments[1]] == 'number') {\r\n                        return array[i][arguments[1]].sort(function(a, b) {\r\n                            return a[i][arguments[1]] < b[i][arguments[1]]\r\n                        })    \r\n                    }\r\n                    if (typeof array[i][arguments[1]] == 'string') {\r\n                        return array[i][arguments[1]].sort()\r\n                    }\r\n                } \r\n            } else {\r\n                array.sort()    \r\n            }\r\n        } else {\r\n            throw new TypeError('Soul.Rank: ' + typeof(array) + ' is not an Array')\r\n        }\r\n    } catch(e) {\r\n        console.error(e);\r\n    }\r\n}","\r\n\r\n\r\nexport default function ReverseRank(array) {\r\n    try {\r\n        if (Array.isArray(array)) {\r\n            if (arguments[1]) {\r\n                for (var i = 0; i < array.length; i ++) {\r\n                    if (typeof array[i][arguments[1]] == 'number') {\r\n                        return array[i][arguments[1]].sort(function(a, b) {\r\n                            return a[i][arguments[1]] < b[i][arguments[1]]\r\n                        })    \r\n                    }\r\n                    if (typeof array[i][arguments[1]] == 'string') {\r\n                        return array[i][arguments[1]].sort()\r\n                    }\r\n                } \r\n            } else {\r\n                array.sort()    \r\n            }\r\n        } else {\r\n            throw new TypeError('Soul.Rank: ' + typeof(array) + ' is not an Array')\r\n        }\r\n    } catch(e) {\r\n        console.error(e);\r\n    }\r\n}","import Rank from './lib/Rank'\r\nimport ReverseRank from './lib/ReverseRank'\r\n\r\nexport var Soul = {\r\n  Rank: Rank,\r\n  ReverseRank: ReverseRank\r\n} "],"names":["Rank","array","Array","isArray","TypeError","arguments","i","length","sort","a","b","e","console","error","ReverseRank","Soul"],"mappings":"oEAGe,QAASA,CAAAA,IAAT,CAAcC,CAAd,CAAqB,IAC5B,KACIC,KAAK,CAACC,OAAND,CAAcD,CAAdC,OAgBM,IAAIE,CAAAA,SAAJ,CAAc,cAAgB,MAAOH,CAAAA,CAAvB,CAAgC,kBAA9C,UAfFI,SAAS,CAAC,CAAD,MACJ,GAAIC,CAAAA,CAAC,CAAG,EAAGA,CAAC,CAAGL,CAAK,CAACM,OAAQD,CAAC,GAAK,IACC,QAAjC,QAAOL,CAAAA,CAAK,CAACK,CAAD,CAALL,CAASI,SAAS,CAAC,CAAD,CAAlBJ,QACAA,CAAAA,CAAK,CAACK,CAAD,CAALL,CAASI,SAAS,CAAC,CAAD,CAAlBJ,EAAuBO,IAAvBP,CAA4B,SAASQ,CAAT,CAAYC,CAAZ,CAAe,OACvCD,CAAAA,CAAC,CAACH,CAAD,CAADG,CAAKJ,SAAS,CAAC,CAAD,CAAdI,EAAqBC,CAAC,CAACJ,CAAD,CAADI,CAAKL,SAAS,CAAC,CAAD,CAAdK,CADzB,CAAAT,KAI0B,QAAjC,QAAOA,CAAAA,CAAK,CAACK,CAAD,CAALL,CAASI,SAAS,CAAC,CAAD,CAAlBJ,QACAA,CAAAA,CAAK,CAACK,CAAD,CAALL,CAASI,SAAS,CAAC,CAAD,CAAlBJ,EAAuBO,IAAvBP,OAIfA,CAAAA,CAAK,CAACO,IAANP,EAdZ,CAmBE,MAAMU,CAAN,CAAS,CACPC,OAAO,CAACC,KAARD,CAAcD,CAAdC,GCrBO,QAASE,CAAAA,WAAT,CAAqBb,CAArB,CAA4B,IACnC,KACIC,KAAK,CAACC,OAAND,CAAcD,CAAdC,OAgBM,IAAIE,CAAAA,SAAJ,CAAc,cAAgB,MAAOH,CAAAA,CAAvB,CAAgC,kBAA9C,UAfFI,SAAS,CAAC,CAAD,MACJ,GAAIC,CAAAA,CAAC,CAAG,EAAGA,CAAC,CAAGL,CAAK,CAACM,OAAQD,CAAC,GAAK,IACC,QAAjC,QAAOL,CAAAA,CAAK,CAACK,CAAD,CAALL,CAASI,SAAS,CAAC,CAAD,CAAlBJ,QACAA,CAAAA,CAAK,CAACK,CAAD,CAALL,CAASI,SAAS,CAAC,CAAD,CAAlBJ,EAAuBO,IAAvBP,CAA4B,SAASQ,CAAT,CAAYC,CAAZ,CAAe,OACvCD,CAAAA,CAAC,CAACH,CAAD,CAADG,CAAKJ,SAAS,CAAC,CAAD,CAAdI,EAAqBC,CAAC,CAACJ,CAAD,CAADI,CAAKL,SAAS,CAAC,CAAD,CAAdK,CADzB,CAAAT,KAI0B,QAAjC,QAAOA,CAAAA,CAAK,CAACK,CAAD,CAALL,CAASI,SAAS,CAAC,CAAD,CAAlBJ,QACAA,CAAAA,CAAK,CAACK,CAAD,CAALL,CAASI,SAAS,CAAC,CAAD,CAAlBJ,EAAuBO,IAAvBP,OAIfA,CAAAA,CAAK,CAACO,IAANP,EAdZ,CAmBE,MAAMU,CAAN,CAAS,CACPC,OAAO,CAACC,KAARD,CAAcD,CAAdC,MCrBGG,CAAAA,IAAI,CAAG,CAChBf,IAAI,CAAEA,IADU,CAEhBc,WAAW,CAAEA,WAFG"}